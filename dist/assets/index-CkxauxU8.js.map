{"version":3,"file":"index-CkxauxU8.js","sources":["../../src/main.ts"],"sourcesContent":["import './style.scss';\r\n/* import Swiper from 'swiper'; */\r\nimport 'swiper/css';\r\nimport gsap from 'gsap';\r\n // Предполагается, что у вас есть несколько секций с тегом \"section\"\r\n// и первая секция имеет класс \"section01\".\r\n\r\n// Сначала скрываем все секции, кроме первой.\r\n/* const sections = document.querySelectorAll('section'); // Изменено на выбор по тегу\r\nsections.forEach((section, index) => {\r\n    if (index !== 0) {\r\n        section.style.height = '0';\r\n    }\r\n}); */\r\n\r\n/* let animationTriggered = false; */\r\n\r\nconst handleScroll = () => {\r\n    setTimeout(()=>{}, 1500)\r\n    const oldSection = document.querySelector('.section01') as HTMLDivElement; // исправил на HTMLDivElement\r\n    if (!oldSection) return;\r\n   \r\n    console.log(window.innerHeight < oldSection.getBoundingClientRect().bottom - 50)\r\n    if (window.innerHeight < oldSection.getBoundingClientRect().bottom - 50) return;\r\n    \r\n    /* animationTriggered = true; */\r\n\r\n    const image = document.getElementById('image') as HTMLImageElement;\r\n    image.style.opacity ='0'\r\n    const newContent = document.getElementById('new-content');\r\n\r\n    // Создаем Canvas для обработки изображения\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n    canvas.width = image.width;\r\n    canvas.height = image.height;\r\n    ctx.drawImage(image, 0, 0);\r\n    \r\n    const pixels = [];\r\n    \r\n    for (let y = 0; y < canvas.height; y += 20) {\r\n        for (let x = 0; x < canvas.width; x += 20) {\r\n            const pixel = ctx.getImageData(x, y, 25, 25);\r\n            pixels.push({ pixel, x, y });\r\n        }\r\n    }\r\n\r\n    function shuffle(array: any) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n    shuffle(pixels);\r\n    let box = document.querySelector('.reactBox')!;\r\n\r\n    pixels.forEach(({ pixel, x, y }) => {\r\n        const div = document.createElement('div');\r\n        div.style.width = '30px';\r\n        div.style.height = '30px';\r\n        div.style.position = 'absolute';\r\n        div.style.backgroundColor = `rgb(${pixel.data[0]}, ${pixel.data[1]}, ${pixel.data[2]})`;\r\n        div.style.left = `${x}px`;\r\n        div.style.top = `${y}px`;\r\n        div.style.zIndex = '99';\r\n\r\n        box.appendChild(div);\r\n\r\n        const randomDelay = Math.random() * 1000;\r\n\r\n        setTimeout(() => {\r\n            gsap.to(div, {\r\n                duration: 1.5,\r\n                opacity: 0,\r\n                scale: 0.5,\r\n                onComplete: () => div.remove()\r\n            });\r\n        }, randomDelay);\r\n    });\r\n\r\n     \r\n\r\n    // Уменьшение первого раздела\r\n    gsap.to(oldSection, {\r\n        duration: 2, \r\n        onComplete: () => {\r\n            oldSection.style.opacity = '0';\r\n            oldSection.style.height = '0';    \r\n            const nextSection = document.querySelector('.section02') as HTMLElement; // выбираем первую секцию, которая не первая\r\n\r\n            if (nextSection) {\r\n                nextSection.style.display = 'block'; // показать следующий раздел\r\n                gsap.from(nextSection, { duration: 1, opacity: 0, height:0 }); \r\n                gsap.to(nextSection, {\r\n                    duration: 2,\r\n                    opacity:1,\r\n                    height:'auto',\r\n                    onComplete: () => {\r\n                        const newContentRect = newContent!.getBoundingClientRect();                                \r\n                        window.scrollTo(0, window.scrollY + newContentRect.top);            \r\n                        window.removeEventListener('scroll', handleScroll);\r\n                    }\r\n                }) \r\n            }\r\n\r\n            \r\n            \r\n        }\r\n    });\r\n};\r\n\r\n// Добавляем слушатель события прокрутки\r\n/* window.addEventListener('scroll', handleScroll); */\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst abilities = [\r\n    {\r\n        title: \"Unique abilities\",\r\n        imgSrc: \"./assets/skill1.png\",\r\n        description: \"In the world of Peexi Punk, a variety of classes are presented, each with unique abilities and playstyles. Players are given the opportunity to choose a class that matches their preferences and combat strategy.\",\r\n    },\r\n    {\r\n        title: \"Active abilities\",\r\n        imgSrc: \"./assets/skill2.png\",\r\n        description: \"In Peexi Punk, players have access to abilities that deal damage, provide defense, or perform other actions during battles, actively interacting with the world and influencing the outcome of the fights.\",\r\n    },\r\n    {\r\n        title: \"Passive abilities\",\r\n        imgSrc: \"./assets/skill3.png\",\r\n        description: \"Passive abilities are constantly active, enhancing the character's attributes or providing additional advantages without requiring activation, allowing players to continually improve their character and adapt to various situations on the battlefield.\",\r\n    }\r\n];\r\n\r\nlet currentAbilityIndex = 0;\r\n\r\nconst titleElement = document.querySelector('.section04BoxTitle')!;\r\nconst imgElement = document.querySelector('.section04BoxImemsImg')! as HTMLImageElement;\r\nconst textElement = document.querySelector('.section04BoxText')!;\r\nconst prevBtn = document.querySelector('.section04BoxImagePrev')!;\r\nconst nextBtn = document.querySelector('.section04BoxImageNext')!;\r\n/* const imgPrev = document.querySelector('.section04BoxImgLeft')! as HTMLImageElement;\r\nconst imgNext = document.querySelector('.section04BoxImgRight')! as HTMLImageElement; */\r\n\r\nfunction updateAbility() {\r\n    const ability = abilities[currentAbilityIndex];\r\n    titleElement.textContent = ability.title;\r\n    imgElement.src = ability.imgSrc;\r\n    imgElement.alt = ability.title;\r\n    textElement.textContent = ability.description;\r\n\r\n    // Disable buttons based on current ability index\r\n    prevBtn.classList.toggle('active', currentAbilityIndex > 0);\r\n    nextBtn.classList.toggle('active', currentAbilityIndex < abilities.length - 1);\r\n     \r\n}\r\n\r\n// Initial load\r\nupdateAbility();\r\n\r\nprevBtn.addEventListener('click', () => {\r\n    if (currentAbilityIndex > 0) {\r\n        currentAbilityIndex--;\r\n        updateAbility();\r\n    }\r\n});\r\n\r\nnextBtn.addEventListener('click', () => {\r\n    if (currentAbilityIndex < abilities.length - 1) {\r\n        currentAbilityIndex++;\r\n        updateAbility();\r\n    }\r\n});\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const subtitles = document.querySelectorAll('.joinExploreSubtitle')!;\r\n    const worldDescription = document.querySelector('.worldDescription')!;\r\n    const projectBox = document.querySelector('.aboutProjectBox')!;\r\n\r\n    const projectContent = [\r\n        {\r\n            description: \"Our world is one of neon lights in megacities, giant corporations, and endless opportunities for exploration and adventure. In Peexi Punk, you will:\",\r\n            elements: [\r\n                \"Explore detailed locations, from grim alleyways to high-tech laboratories.\",\r\n                \"Meet and interact with numerous unique NPCs, each with their own goals and stories.\",\r\n                \"Engage in dynamic events and missions that develop the main storyline.\"\r\n            ]\r\n        },\r\n        {\r\n            description: \"Peexi Punk is integrated into the Haqq Network, ensuring the security and reliability of all in-game transactions. Blockchain technologies empower the game to achieve:\",\r\n            elements: [\r\n                \"Affordable transactions, allowing players to easily exchange items and resources.\",\r\n                \"Convenient and secure crafting, creating unique items and equipment.\",\r\n                \"Efficient auction system functioning, where every player can trade and sell their discoveries.\"\r\n            ]\r\n        },\r\n        {\r\n            description: \"In Peexi Punk, there are no limits to your imagination and possibilities. Start your adventure today and become part of our growing community. Be ready for the unknown, and let your cyberpunk dreams become reality. Welcome to the future. Welcome to Peexi Punk.\",\r\n            elements: [\r\n                 \r\n            ]\r\n        }\r\n    ];\r\n\r\n    subtitles.forEach((subtitle) => {\r\n        subtitle.addEventListener('click', () => {\r\n            // Remove active class from all subtitles\r\n            subtitles.forEach((sub) => sub.classList.remove('joinExploreSubtitleActive'));\r\n            // Add active class to the clicked subtitle\r\n            subtitle.classList.add('joinExploreSubtitleActive');\r\n\r\n            // Get the index of the clicked subtitle\r\n            const index = subtitle.getAttribute('data-index') as unknown as number;\r\n\r\n            // Update the world description and project box content\r\n            worldDescription.textContent = projectContent[index].description;\r\n            projectBox.innerHTML = projectContent[index].elements.map(element => `\r\n                <div class=\"aboutProjectBoxElement\">\r\n                    <div class=\"rectAdventureSection\"></div>\r\n                    <p class=\"aboutProjectBoxElementText\">${element}</p>\r\n                </div>\r\n            `).join('');\r\n        });\r\n    });\r\n});\r\n\r\n\r\nconst playerData = [\r\n    {\r\n        id: '04',\r\n        title: 'Healer',\r\n        description: 'Restores health using nanobots.',\r\n        backgroundImage: './assets/players/04B.png',\r\n        mainImage: './assets/players/04.png'\r\n    },\r\n    {\r\n        id: '05',\r\n        title: 'Ranger',\r\n        description: 'Utilizes cutting-edge high-tech rifles.',\r\n        backgroundImage: './assets/players/05B.png',\r\n        mainImage: './assets/players/05.png'\r\n    },\r\n    {\r\n        id: '01',\r\n        title: 'Battle Mage',\r\n        description: 'Uses ancient crystals for pyromancy and other forms of magic.',\r\n        backgroundImage: './assets/players/01B.png',\r\n        mainImage: './assets/players/01.png'\r\n    },\r\n    {\r\n        id: '02',\r\n        title: 'Warrior',\r\n        description: 'Assault class: tank and damage dealer with paired light swords.',\r\n        backgroundImage: './assets/players/02B.png',\r\n        mainImage: './assets/players/02.png'\r\n    },\r\n    {\r\n        id: '03',\r\n        title: 'Summoner',\r\n        description: 'Uses summoning items to call forth different creatures that deal damage to enemy NPCs.',\r\n        backgroundImage: './assets/players/03B.png',\r\n        mainImage: './assets/players/03.png'\r\n    },\r\n];\r\n\r\nlet activeIndex = 2; // Начальный активный индекс\r\nconst playerCont = document.querySelector('.playerBoxContainer')!;\r\n\r\n// Отрисовка слайдера\r\nconst renderSlider = () => {\r\n    playerCont.innerHTML = ''; // Очищаем контейнер\r\n    const totalItems = playerData.length;\r\n    \r\n    // Начальный индекс для отображения\r\n    const startIndex = (activeIndex - 2 + totalItems) % totalItems; // Начинаем с 2 элементов слева от активного\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n        const index = (startIndex + i) % totalItems; // Циклический индекс\r\n        const player = playerData[index];\r\n        const isActive = index === activeIndex;\r\n\r\n        const playerBox = document.createElement('div');\r\n        playerBox.className = `playerBox `\r\n        \r\n        \r\n        playerBox.innerHTML = `\r\n            <div class=\"playerItems\">\r\n                <div class=\"playerItemsImages\">\r\n                    <img class=\"playerItemsImageBack\" src=\"${player.backgroundImage}\" alt=\"Background image of ${player.title}\" />\r\n                    <img class=\"playerItemsImageMain\" src=\"${player.mainImage}\" alt=\"Main image of ${player.title}\" />\r\n                </div>\r\n                <div class=\"playerBoxRow\">\r\n                    <div class=\"playerBoxCol\">\r\n                        <h6 class=\"playerBoxTitle\">${player.title}</h6>\r\n                        <h3 class=\"playerBoxNum\">${player.id}</h3>\r\n                    </div>\r\n                    <p class=\"playerBoxText\">\r\n                        ${player.description}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        `;\r\n        /*   */\r\n        if(isActive){\r\n            playerBox.classList.add('playerBoxActive')\r\n        }\r\n\r\n        // При клике изменяем активный элемент\r\n        playerBox.addEventListener('click', () => updateSlider(index));\r\n        playerCont.appendChild(playerBox);\r\n    }\r\n};\r\n\r\n// Функция обновления слайдера\r\nconst updateSlider = (index:number) => {\r\n    if (index !== activeIndex) {\r\n        console.log(index, activeIndex)\r\n        // Обновляем активный индекс\r\n        activeIndex = index;\r\n        renderSlider();\r\n    }\r\n     // Перерисовываем слайдер\r\n};\r\n\r\n// Изначальное отображение\r\nrenderSlider();\r\n\r\n \r\n\r\n\r\n// Получаем все элементы с классом 'section05Col'\r\nif(window.innerWidth < 980){\r\n    const cols: NodeListOf<HTMLElement> = document.querySelectorAll('.section05Col');\r\n\r\n    // Добавляем обработчики событий для каждого элемента\r\n    cols.forEach((col: any) => {\r\n      /* col.addEventListener('mouseenter', () => {\r\n        col.classList.add('section05ColActive');\r\n      });\r\n    \r\n      col.addEventListener('mouseleave', () => {\r\n        col.classList.remove('section05ColActive');\r\n      }); */\r\n      col.addEventListener('click', () => {\r\n        cols.forEach((item: HTMLElement) => {item.classList.remove('section05ColActive')});\r\n        col.classList.add('section05ColActive');\r\n        \r\n         \r\n      });\r\n    });\r\n}\r\nconst cols: NodeListOf<HTMLElement> = document.querySelectorAll('.section05Col');\r\nlet activeColClass = 0\r\n// Добавляем обработчики событий для каждого элемента\r\ncols.forEach((col: HTMLElement) => {\r\n  col.addEventListener('mouseenter', () => {\r\n    if (col !== col.parentNode?.lastElementChild) {\r\n    cols[activeColClass].classList.remove('section05ColActive');\r\n\r\n    col.classList.add('section05ColActive');\r\n    activeColClass = Array.from(cols).indexOf(col);\r\n    }\r\n  });\r\n \r\n   \r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n    const collectionsButton = document.querySelector('.collectionsButton')!;\r\n    const additionalBlock = document.querySelector('.additionalBlock')! as HTMLElement;\r\n    \r\n    collectionsButton.addEventListener('mouseenter', function() {\r\n      additionalBlock.style.opacity = '1'; // Показываем блок при наведении\r\n    });\r\n  \r\n    additionalBlock.addEventListener('mouseleave', function() {\r\n      additionalBlock.style.opacity = '0'; // Скрываем блок при выводе курсора\r\n    });\r\n  \r\n    collectionsButton.addEventListener('click', function() {\r\n      // Переключаем видимость блока при клике\r\n      if (additionalBlock.style.opacity === '1') {\r\n        additionalBlock.style.opacity = '0';\r\n      } else {\r\n        additionalBlock.style.opacity = '1';\r\n      }\r\n    });\r\n    const playerButton = document.querySelector('.section01NavBoxRight')!;\r\n    const playerBox = document.querySelector('.additionalBlockPlayer')! as HTMLElement;\r\n    \r\n    playerButton.addEventListener('mouseenter', function() {\r\n        playerBox.style.opacity = '1'; // Показываем блок при наведении\r\n    });\r\n  \r\n    playerBox.addEventListener('mouseleave', function() {\r\n        playerBox.style.opacity = '0'; // Скрываем блок при выводе курсора\r\n    });\r\n  \r\n    playerButton.addEventListener('click', function() {\r\n      // Переключаем видимость блока при клике\r\n      if (playerBox.style.opacity === '1') {\r\n        playerBox.style.opacity = '0';\r\n      } else {\r\n        playerBox.style.opacity = '1';\r\n      }\r\n    });\r\n\r\n\r\n  });\r\n"],"names":["abilities","currentAbilityIndex","titleElement","imgElement","textElement","prevBtn","nextBtn","updateAbility","ability","subtitles","worldDescription","projectBox","projectContent","subtitle","sub","index","element","playerData","activeIndex","playerCont","renderSlider","totalItems","startIndex","i","player","isActive","playerBox","updateSlider","cols","col","item","activeColClass","_a","collectionsButton","additionalBlock","playerButton"],"mappings":"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"}